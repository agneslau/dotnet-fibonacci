# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  tags:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        if: github.ref == 'refs/heads/main'
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Add tag to output step for main branch
        id: tag
        run: |
          if [ '${{ github.ref }}' = 'refs/heads/main' ]; then
            echo "new_version=${{ steps.tag_version.outputs.new_version }}" >> $GITHUB_OUTPUT
          else
            echo "new_version=pr-${{ github.event.number }}-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
  build_docker:
    needs: tags
    uses: ./.github/workflows/Docker.yml
    with:
      image_name: "agneslaur/fibonacci"
      image_version: "${{ needs.tags.outputs.new_version }}"
      image_build_args: ""
      image_context: .
      image_file: "./src/Leonardo.Web/Dockerfile"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
  publish_docker:
    needs: [ tags, build_docker ]
    runs-on: ubuntu-latest
    steps:
      - name: azure login
        uses: azure/login@v1
        with: 
          # az ad sp create-for-rbac --name "azure-admin" --role contributor --scopes /subscriptions/<subscription-id> --sdk-auth
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Deploy container
        run: |# https://learn.microsoft.com/en-us/cli/azure/container?view=azure-cli-latest#az-container-create()
          az group create --name mon-resource-group --location northeurope
          az container create --resource-group mon-resource-group --name fibonacci-agnes --dns-name-label fibonacci-agnesLau --image docker.io/agneslaur/fibonacci:${{ needs.tags.outputs.new_version }} --ports 8080